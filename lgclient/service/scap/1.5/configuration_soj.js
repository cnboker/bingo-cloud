Configuration=(function(){var Configuration,service;function log(msg){}
if(typeof window==='object'){cordova.define('cordova/plugin/configuration',function(require,exports,module){Configuration=function(){};if(window.PalmSystem){log("Window.PalmSystem Available");service=require('cordova/plugin/webos/service')}else{service={Request:function(uri,params){log(uri+" invoked. But I am a dummy because PalmSystem is not available");if(typeof params.onFailure==='function'){params.onFailure({returnValue:!1,errorText:"PalmSystem Not Available. Cordova is not installed?"})}}}}
module.exports=Configuration});Configuration=cordova.require('cordova/plugin/configuration')}
else{Configuration=function(serviceInstance){service=serviceInstance;service.Request=function(serviceUri,reqParams){var commandURI=serviceUri+"/"+reqParams.method;var parameters={};if(reqParams.hasOwnProperty("parameters")===!0)
parameters=reqParams.parameters;var convertedRes={};var callback=function(res){console.log("res : "+JSON.stringify(res));if(res.payload.returnValue===!0){convertedRes=res.payload;reqParams.onSuccess(convertedRes)}else{convertedRes.returnValue=!1;convertedRes.errorCode=res.payload.errorCode;convertedRes.errorText=res.payload.errorText;reqParams.onFailure(convertedRes)}}
if(service){service.call(commandURI,parameters,callback)}}};module.exports=Configuration}
function checkErrorCodeNText(result,errorCode,errorText){if(result.errorCode===undefined||result.errorCode===null){result.errorCode=errorCode}
if(result.errorText===undefined||result.errorText===null){result.errorText=errorText}}
Configuration.PictureMode={VIVID:"vivid",STANDARD:"normal",APS:"eco",CINEMA:"cinema",GAME:"game",SPORTS:"sports",EXPERT1:"expert1",EXPERT2:"expert2"};Configuration.AppMode={LOCAL:"local",USB:"usb",REMOTE:"remote"};Configuration.AppType={IPK:"ipk",ZIP:"zip"};Configuration.LocaleList=[{'language':'čeština','languageCode':'cs','countries':[{'name':'','specifier':'cs-CZ'}]},{'language':'dansk','languageCode':'da','countries':[{'name':'','specifier':'da-DK'}]},{'language':'Deutsch','languageCode':'de','countries':[{'name':'','specifier':'de-DE'}]},{'language':'English','languageCode':'en','countries':[{'name':'','specifier':'en-US'}]},{'language':'Español','languageCode':'es','countries':[{'name':'','specifier':'es-ES'}]},{'language':'ελληνική γλώσσα','languageCode':'el','countries':[{'name':'','specifier':'el-GR'}]},{'language':'Français','languageCode':'fr','countries':[{'name':'','specifier':'fr-FR'}]},{'language':'italiano','languageCode':'it','countries':[{'name':'','specifier':'it-IT'}]},{'language':'Nederlands','languageCode':'nl','countries':[{'name':'','specifier':'nl-NL'}]},{'language':'norsk','languageCode':'nb','countries':[{'name':'','specifier':'nb-NO'}]},{'language':'português','languageCode':'pt','countries':[{'name':'Portugal','specifier':'pt-PT'},{'name':'Brasil','specifier':'pt-BR'}]},{'language':'русский','languageCode':'ru','countries':[{'name':'','specifier':'ru-RU'}]},{'language':'suomi','languageCode':'fi','countries':[{'name':'','specifier':'fi-FI'}]},{'language':'svenska','languageCode':'sv','countries':[{'name':'','specifier':'sv-SE'}]},{'language':'한국어','languageCode':'ko','countries':[{'name':'','specifier':'ko-KR'}]},{'language':'中文','languageCode':'zh-Hans','countries':[{'name':'中国','specifier':'zh-Hans-CN'}]},{'language':'日本語','languageCode':'ja','countries':[{'name':'','specifier':'ja-JP'}]},{'language':'中文','languageCode':'zh','countries':[{'name':'香港','specifier':'zh-Hant-HK'}]}];function isValidSpecifier(value){var arr=Configuration.LocaleList;for(var i=0;i<arr.length;i++){var countries=arr[i].countries;for(var j=0;j<countries.length;j++){if(countries[j].specifier===value){return!0}}}
return!1}
function isValidLanguageCode(value){var arr=Configuration.LocaleList;for(var i=0;i<arr.length;i++){if(arr[i].languageCode===value){return!0}}
return!1}
var version=null;function checkPlatformVersion(cb){if(version===null){service.Request('luna://com.webos.service.tv.systemproperty',{method:'getSystemInfo',parameters:{keys:["sdkVersion"]},onSuccess:function(result){log("getPlatformInfo: onSuccess");var temp=result.sdkVersion.split('.');if(temp.length>=1&&temp[0]==='1'){version=1}else if(temp.length>=1&&temp[0]==='2'){version=2}else if(temp.length>=1&&temp[0]==='3'){version=3}else{version=0}
delete result.returnValue;cb(version)},onFailure:function(error){log("getPlatformInfo: onFailure");delete error.returnValue;version=0;cb(version)}})}else{cb(version)}}
Configuration.prototype.setPictureMode=function(successCallback,errorCallback,options){log("setPictureMode: "+JSON.stringify(options));service.Request("luna://com.webos.service.commercial.signage.storageservice/settings/",{method:"set",parameters:{category:"picture",settings:{"pictureMode":options.mode}},onSuccess:function(result){log("setPictureMode: On Success");if(result.returnValue===!0){if(typeof successCallback==='function'){successCallback()}}},onFailure:function(result){log("setPictureMode: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CSPM","Configuration.setPictureMode returns failure.");errorCallback(result)}}});log("Configuration.setPictureMode Done")};Configuration.prototype.getPictureMode=function(successCallback,errorCallback){log("getPictureMode: ");service.Request("luna://com.webos.service.commercial.signage.storageservice/settings/",{method:"get",parameters:{category:"picture",keys:["pictureMode"]},onSuccess:function(result){log("getPictureMode: On Success");if(result.returnValue===!0){if(typeof successCallback==='function'){var cbObj={};cbObj.mode=result.settings.pictureMode;successCallback(cbObj)}}},onFailure:function(result){log("getPictureMode: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CGPM","Configuration.getPictureMode returns failure.");errorCallback(result)}}});log("Configuration.getPictureMode Done")};Configuration.prototype.setPictureProperty=function(successCallback,errorCallback,options){log("setPictureProperty: "+JSON.stringify(options));checkPlatformVersion(function(ver){var sets={};for(var key in options){if(key!==undefined&&key!==null){sets[key]=options[key];if(key==='tint'||key==='colorTemperature'){sets[key]-=50}else if(key==='blackLevel'){sets[key]={"unknown":options[key]};if(options[key]!=="low"&&options[key]!=="high"){log("setPictureProperty: gamma value error "+JSON.stringify(options));var result={};checkErrorCodeNText(result,"CSPP","Configuration.setPictureProperty, There is No matched item : blackLevel.");errorCallback(result);return}}else if(key==='gamma'&&(ver===2||ver===3)&&options[key]==="high"){sets[key]="high1"}}}
log(JSON.stringify(sets));service.Request("luna://com.webos.service.commercial.signage.storageservice/settings/",{method:"set",parameters:{category:"picture",settings:sets},onSuccess:function(result){log("setPictureProperty: On Success");if(result.returnValue===!0){if(typeof successCallback==='function'){successCallback()}}},onFailure:function(result){log("setPictureProperty: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CSPP","Configuration.setPictureProperty returns failure.");errorCallback(result)}}});log("Configuration.setPictureProperty Done")})};Configuration.prototype.getPictureProperty=function(successCallback,errorCallback){log("getPictureProperty: ");service.Request("luna://com.webos.service.commercial.signage.storageservice/settings/",{method:"get",parameters:{category:"picture",keys:["brightness","contrast","color","tint","backlight","sharpness","hSharpness","vSharpness","colorTemperature","dynamicContrast","superResolution","colorGamut","dynamicColor","noiseReduction","mpegNoiseReduction","blackLevel","gamma"]},onSuccess:function(result){log("getPictureProperty: On Success");if(result.returnValue===!0){if(typeof successCallback==='function'){var cbObj={};for(var key in result.settings){if(key!==undefined&&key!==null){cbObj[key]=(isNaN(result.settings[key])?result.settings[key]:Number(result.settings[key]));if(key==='tint'||key==='colorTemperature'){cbObj[key]+=50}else if(key==='blackLevel'){cbObj[key]=result.settings[key].unknown}else if(key==='gamma'&&result.settings[key]==="high1"){cbObj[key]="high"}}}
successCallback(cbObj)}}},onFailure:function(result){log("getPictureProperty: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CGPP","Configuration.getPictureProperty returns failure.");errorCallback(result)}}});log("Configuration.getPictureProperty Done")};var mapTable={"alias":"signageName"};Configuration.prototype.setProperty=function(successCallback,errorCallback,options){log("setProperty: "+JSON.stringify(options));var ret=JSON.parse(options);var sets={};var params={};checkPlatformVersion(function(ver){if(ver===3){mapTable.alias="deviceName";params.category="network"}else{mapTable.alias="signageName";params.category="commercial"}
for(var key in ret){if(mapTable[key]!==undefined){sets[(mapTable[key])]=ret[key]}}
params.settings=sets;service.Request("luna://com.webos.service.commercial.signage.storageservice/settings/",{method:"set",parameters:params,onSuccess:function(result){log("setProperty: On Success");if(result.returnValue===!0){if(typeof successCallback==='function'){successCallback()}}},onFailure:function(result){log("setProperty: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CSP","Configuration.setProperty returns failure.");errorCallback(result)}}})});log("Configuration.setProperty Done")};Configuration.prototype.getProperty=function(successCallback,errorCallback,options){log("getProperty: ");var ret=JSON.parse(options);var keys=ret.keys;var params={};var arrayKeys=[];checkPlatformVersion(function(ver){if(ver===3){mapTable.alias="deviceName";params.category="network"}else{mapTable.alias="signageName";params.category="commercial"}
for(var key in keys){if(key!==null&&key!==undefined){log("key"+keys[key]);arrayKeys.push(mapTable[keys[key]])}}
params.keys=arrayKeys;log(arrayKeys);service.Request("luna://com.webos.service.commercial.signage.storageservice/settings/",{method:"get",parameters:params,onSuccess:function(result){log("getProperty: On Success");if(result.returnValue===!0){if(typeof successCallback==='function'){var cbObj={};for(var key in keys){if(key!==null||key!==undefined){log("key"+keys[key]);if(result.settings[mapTable[keys[key]]]!==undefined||result.settings[mapTable[keys[key]]]!==null){cbObj[keys[key]]=result.settings[mapTable[keys[key]]]}}}
successCallback(JSON.stringify(cbObj))}}},onFailure:function(result){log("getProperty: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CGP","Configuration.getProperty returns failure.");errorCallback(result)}}})});log("Configuration.getProperty Done")};Configuration.prototype.setCurrentTime=function(successCallback,errorCallback,options){log("setCurrentTime: "+JSON.stringify(options));var input=new Date(options.year,options.month-1,options.day,options.hour,options.minute,options.sec);if(options.year<2000||options.year>2037||options.month<1||options.month>12||options.day<1||options.day>31||options.hour<0||options.hour>23||options.minute<0||options.minute>59||options.sec<0||options.sec>59||input.getFullYear()!==options.year||input.getMonth()!==(options.month-1)||input.getDate()!==options.day||input.getHours()!==options.hour||input.getMinutes()!==options.minute||input.getSeconds()!==options.sec){if(typeof errorCallback==='function'){log("setCurrentTime: out of range or invalid parameter type");var result={};checkErrorCodeNText(result,"CSCT","Configuration.setCurrentTime returns failure for out of range.");errorCallback(result);return}}
log("setCurrentTime: "+JSON.stringify(options));var time={};time.year=options.year;time.month=options.month;time.day=options.day;time.hour=options.hour;time.minute=options.minute;time.sec=options.sec;service.Request("luna://com.webos.service.commercial.signage.storageservice/settings/",{method:"setSystemTime",parameters:{time:time,ntp:options.ntp},onSuccess:function(){log("setCurrentTime: On Success");if(typeof successCallback==='function'){successCallback()}},onFailure:function(result){log("setCurrentTime: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CSCT","Configuration.setCurrentTime returns failure.");errorCallback(result)}}});log("Configuration.setCurrentTime Done")};Configuration.prototype.getCurrentTime=function(successCallback,errorCallback){log("getCurrentTime: ");service.Request("luna://com.palm.systemservice/time/",{method:"getEffectiveBroadcastTime",onSuccess:function(result){log("getCurrentTime : On Success");if(result.returnValue===!0){var cbObj={};var d=new Date(result.adjustedUtc*1000);cbObj.year=d.getFullYear();cbObj.month=d.getMonth()+1;cbObj.day=d.getDate();cbObj.hour=d.getHours();cbObj.minute=d.getMinutes();cbObj.sec=d.getSeconds();service.Request("luna://com.palm.systemservice/",{method:"getPreferences",parameters:{keys:["useNetworkTime"]},onSuccess:function(res){log("getPreferences : On Success");if(res.returnValue===!0){cbObj.ntp=res.useNetworkTime;if(typeof successCallback==='function'){successCallback(cbObj)}}else{if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CGCT","Configuration.getCurrentTime returns failure.");errorCallback(result)}}},onFailure:function(result){log("getCurrentTime: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CGCT","Configuration.getCurrentTime returns failure.");errorCallback(result)}}})}else{if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CGCT","Configuration.getCurrentTime returns failure.");errorCallback(result)}}},onFailure:function(result){log("getCurrentTime: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CGCT","Configuration.getCurrentTime returns failure.");errorCallback(result)}}});log("Configuration.getCurrentTime Done")};Configuration.prototype.restartApplication=function(successCallback,errorCallback){log("restartApp: ");service.Request("luna://com.webos.service.commercial.signage.storageservice/",{method:"restart_application",onSuccess:function(result){log("restartApp: On Success");if(typeof successCallback==='function'){successCallback(result)}},onFailure:function(result){log("restartApp: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CRA","Configuration.restartApp returns failure.");errorCallback(result)}}});log("Configuration.restartApp Done")};Configuration.prototype.getServerProperty=function(successCallback,errorCallback){log("getServerProperty: ");service.Request("luna://com.webos.service.commercial.signage.storageservice/settings/",{method:"get",parameters:{category:"commercial",keys:["serverIpPort","siServerIp","secureConnection","appLaunchMode","fqdnAddr","fqdnMode","appType"]},onSuccess:function(result){log("getPictureProperty: On Success");if(result.returnValue===!0){if(typeof successCallback==='function'){var cbObj={};cbObj.serverIp=result.settings.siServerIp;cbObj.serverPort=parseInt(result.settings.serverIpPort,10);cbObj.secureConnection=(result.settings.secureConnection==="off"?!1:!0);cbObj.appLaunchMode=result.settings.appLaunchMode;cbObj.appType=result.settings.appType;cbObj.fqdnMode=(result.settings.fqdnMode==="off"?!1:!0);cbObj.fqdnAddr=result.settings.fqdnAddr;successCallback(cbObj)}}},onFailure:function(result){log("getServerProperty: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CGSP","Configuration.getServerProperty returns failure.");errorCallback(result)}}});log("Configuration.getServerProperty Done")};Configuration.prototype.setServerProperty=function(successCallback,errorCallback,options){log("setServerProperty: "+JSON.stringify(options));if(options===undefined||typeof options.serverIp!=='string'||/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(options.serverIp)===!1||isNaN(options.serverPort)||options.serverPort<0||options.serverPort>65535||typeof options.serverPort!=='number'||typeof options.secureConnection!=='boolean'||typeof options.appLaunchMode!=='string'||(options.appLaunchMode!==Configuration.AppMode.USB&&options.appLaunchMode!==Configuration.AppMode.LOCAL&&options.appLaunchMode!==Configuration.AppMode.REMOTE)||typeof options.fqdnMode!=='boolean'||typeof options.fqdnAddr!=='string'){if(typeof errorCallback==='function'){var result={};checkErrorCodeNText(result,"CSSP","Configuration.setServerProperty, Invalid parameters.");log("options.serverIp : "+typeof options.serverIp+" options.serverPort : "+typeof options.serverPort+" options.secureConnection : "+typeof options.secureConnection+" options.appLaunchMode : "+typeof options.appLaunchMode+" options.fqdnMode : "+typeof options.fqdnMode+" options.fqdnAddr : "+options.fqdnAddr);errorCallback(result);return}}
var sets={};sets.siServerIp=options.serverIp;sets.serverIpPort=options.serverPort+'';sets.secureConnection=(options.secureConnection===!0?"on":"off");sets.appLaunchMode=options.appLaunchMode;sets.fqdnMode=(options.fqdnMode===!0?"on":"off");sets.fqdnAddr=options.fqdnAddr;if(typeof options.appType!=='undefined')
sets.appType=options.appType;log(JSON.stringify(sets));service.Request("luna://com.webos.service.commercial.signage.storageservice/settings/",{method:"set",parameters:{category:"commercial",settings:sets},onSuccess:function(result){log("setServerProperty: On Success");if(result.returnValue===!0){if(typeof successCallback==='function'){successCallback()}}},onFailure:function(result){log("setServerProperty: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CSSP","Configuration.setServerProperty returns failure.");errorCallback(result)}}});log("Configuration.setServerProperty Done")};Configuration.prototype.clearCache=function(successCallback,errorCallback){log("clearCache: ");service.Request("luna://com.webos.service.commercial.signage.storageservice/",{method:"clearCache",onSuccess:function(result){log("clearCache: On Success");if(typeof successCallback==='function'){successCallback()}},onFailure:function(result){log("clearCache: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CCC","Configuration.clearCache returns failure.");errorCallback(result)}}});log("Configuration.clearCache Done")};Configuration.prototype.getTimeZoneList=function(successCallback,errorCallback){log("getTimeZoneList: ");service.Request("luna://com.webos.service.commercial.signage.storageservice/settings/",{method:"getTimeZoneList",onSuccess:function(result){log("getTimeZoneList: On Success");if(result.returnValue===!0){if(typeof successCallback==='function'){delete result.returnValue;successCallback(result)}}},onFailure:function(result){log("getTimeZoneList: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CGTL","Configuration.getTimeZoneList returns failure.");errorCallback(result)}}});log("Configuration.getTimeZoneList Done")};Configuration.prototype.getTimeZone=function(successCallback,errorCallback){log("getTimeZone: ");service.Request("luna://com.webos.service.commercial.signage.storageservice/settings/",{method:"getTimeZone",onSuccess:function(result){log("getTimeZone: On Success");if(result.returnValue===!0){if(typeof successCallback==='function'){delete result.returnValue;successCallback(result)}}},onFailure:function(result){log("getTimeZone: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CGTZ","Configuration.getTimeZone returns failure.");errorCallback(result)}}});log("Configuration.getTimeZone Done")};Configuration.prototype.setTimeZone=function(successCallback,errorCallback,options){log("setTimeZone: ");service.Request("luna://com.webos.service.commercial.signage.storageservice/settings/",{method:"get",parameters:{category:"time",keys:["autoClock"]},onSuccess:function(result){if(result.returnValue===!0){if(typeof successCallback==='function'){if(result.settings.autoClock==="off"){delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CSTZ","Configuration.setTimeZone returns failure. autoClock is off");errorCallback(result)}}else{service.Request("luna://com.webos.service.commercial.signage.storageservice/settings/",{method:"setTimeZone",parameters:options,onSuccess:function(result){log("setTimeZone: On Success");if(result.returnValue===!0){if(typeof successCallback==='function'){delete result.returnValue;successCallback(result)}}},onFailure:function(result){log("setTimeZone: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CSTZ","Configuration.setTimeZone returns failure.");errorCallback(result)}}})}}}},onFailure:function(result){log("setTimeZone: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CSTZ","Configuration.setTimeZone returns failure.");errorCallback(result)}}});log("Configuration.setTimeZone Done")};Configuration.prototype.debug=function(successCallback,errorCallback,options){log("debug: "+options.enabled);service.Request("luna://com.webos.service.commercial.signage.storageservice/",{method:"debug",parameters:{enabled:options.enabled},onSuccess:function(result){log("debug: On Success");if(typeof successCallback==='function'){successCallback(result)}},onFailure:function(result){log("debug: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CD","Configuration.debug returns failure.");errorCallback(result)}}});log("Configuration.debug Done")};Configuration.prototype.setUSBLock=function(successCallback,errorCallback,options){log("setUSBLock: "+options.enabled);if(options.enabled===null&&typeof errorCallback==='function'){var result={};checkErrorCodeNText(result,"CSUL","Configuration.setUSBLock returns failure. command was not defined.");errorCallback(result);log("Configuration.setUSBLock invalid ");return}
service.Request("luna://com.webos.service.commercial.signage.storageservice/settings/",{method:"set",parameters:{category:"commercial",settings:{"enableUsb":(options.enabled===!0)?"off":"on"}},onSuccess:function(result){log("setUSBLock: On Success");if(result.returnValue===!0){if(typeof successCallback==='function'){successCallback()}}},onFailure:function(result){log("setUSBLock: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CSUL","Configuration.setUSBLock returns failure.");errorCallback(result)}}});log("Configuration.setUSBLock Done")};Configuration.prototype.getUSBLock=function(successCallback,errorCallback){log("getUSBLock: ");service.Request("luna://com.webos.service.commercial.signage.storageservice/settings/",{method:"get",parameters:{category:"commercial",keys:["enableUsb"]},onSuccess:function(result){log("getUSBLock: On Success");if(result.returnValue===!0){var cbObj={};cbObj.enabled=(result.settings.enableUsb==="off")?!0:!1;if(typeof successCallback==='function'){successCallback(cbObj)}}},onFailure:function(result){log("getUSBLock: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CGUL","Configuration.getUSBLock returns failure.");errorCallback(result)}}});log("Configuration.getUSBLock Done")};Configuration.prototype.setOSDLock=function(successCallback,errorCallback,options){log("setOSDLock: "+options.enabled);if(options.enabled===null&&typeof errorCallback==='function'){var result={};checkErrorCodeNText(result,"CSOL","Configuration.setOSDLock returns failure. command was not defined.");errorCallback(result);log("Configuration.setOSDLock invalid ");return}
service.Request("luna://com.webos.service.commercial.signage.storageservice/settings/",{method:"set",parameters:{category:"hotelMode",notifySelf:!1,settings:{"enableMrcu":(options.enabled===!0)?"off":"on","enableOsdVisibility":(options.enabled===!0)?"off":"on"}},onSuccess:function(result){log("setOSDLock: On Success");if(result.returnValue===!0){if(typeof successCallback==='function'){successCallback()}}},onFailure:function(result){log("setOSDLock: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CSOL","Configuration.setOSDLock returns failure.");errorCallback(result)}}});log("Configuration.setOSDLock Done")};Configuration.prototype.getOSDLock=function(successCallback,errorCallback){log("getOSDLock: ");service.Request("luna://com.webos.service.commercial.signage.storageservice/settings/",{method:"get",parameters:{category:"hotelMode",keys:["enableMrcu","enableOsdVisibility"]},onSuccess:function(result){log("getOSDLock: On Success");if(result.returnValue===!0){var cbObj={};cbObj.enabled=(result.settings.enableMrcu==="on"&&result.settings.enableOsdVisibility==="on")?!1:!0;if(typeof successCallback==='function'){successCallback(cbObj)}}},onFailure:function(result){log("getOSDLock: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CGOL","Configuration.getOSDLock returns failure.");errorCallback(result)}}});log("Configuration.getOSDLock Done")};Configuration.prototype.getLocaleList=function(successCallback,errorCallback){log("getLocaleList: ");var cbObj={};cbObj.localeList=Configuration.LocaleList;if(typeof successCallback==='function'){successCallback(cbObj)}
log("Configuration.getLocaleList Done")};Configuration.prototype.setOSDLanguage=function(successCallback,errorCallback,options){log("setOSDLanguage: "+options.specifier);if((options.specifier===null||typeof options.specifier!=='string')&&typeof errorCallback==='function'){var result={};checkErrorCodeNText(result,"CSOL","Configuration.setOSDLanguage returns failure. command was not defined.");errorCallback(result);log("Configuration.setOSDLanguage invalid ");return}
if(isValidSpecifier(options.specifier)===!0){log("Specifier is valid");service.Request("luna://com.webos.service.commercial.signage.storageservice/settings/",{method:"get",parameters:{keys:["localeInfo"]},onSuccess:function(result){if(result.returnValue===!0){var localeInfo={};localeInfo=result.settings.localeInfo;localeInfo.locales.UI=options.specifier;localeInfo.locales.FMT=options.specifier;localeInfo.locales.TV=options.specifier;log("localeInfo : "+JSON.stringify(localeInfo));service.Request("luna://com.webos.service.commercial.signage.storageservice/settings/",{method:"set",parameters:{settings:{localeInfo:localeInfo}},onSuccess:function(result){log("setOSDLanguage: On Success");if(result.returnValue===!0){if(typeof successCallback==='function'){successCallback()}}},onFailure:function(result){log("setOSDLanguage: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CSOL","Configuration.setOSDLanguage returns failure.");errorCallback(result)}}})}},onFailure:function(result){delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CSOL","Configuration.setOSDLanguage returns failure.");errorCallback(result)}}})}else{var result={};checkErrorCodeNText(result,"CSOL","Configuration.setOSDLanguage returns failure. specifier is not valid.");errorCallback(result);log("Configuration.setOSDLanguage invalid ");return}
log("Configuration.setOSDLanguage Done")};Configuration.prototype.getOSDLanguage=function(successCallback,errorCallback){log("getOSDLanguage: ");service.Request("luna://com.webos.service.commercial.signage.storageservice/settings/",{method:"get",parameters:{keys:["localeInfo"]},onSuccess:function(result){log("getOSDLanguage: On Success");if(result.returnValue===!0){var cbObj={};log("localeInfo : "+JSON.stringify(result.settings.localeInfo));cbObj.specifier=result.settings.localeInfo.locales.UI;if(typeof successCallback==='function'){successCallback(cbObj)}}},onFailure:function(result){log("getOSDLanguage: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CGOL","Configuration.getOSDLanguage returns failure.");errorCallback(result)}}});log("Configuration.getOSDLanguage Done")};Configuration.prototype.setVirtualKeyboardLanguage=function(successCallback,errorCallback,options){log("setVirtualKeyboardLanguage: "+options.languageCodeList);if(options.languageCodeList===null&&typeof errorCallback==='function'){var result={};checkErrorCodeNText(result,"CSKL","Configuration.setVirtualKeyboardLanguage returns failure. command was not defined.");errorCallback(result);log("Configuration.setVirtualKeyboardLanguage invalid ");return}
for(var i=0;i<options.languageCodeList.length;i++){if(isValidLanguageCode(options.languageCodeList[i])===!1){var result={};checkErrorCodeNText(result,"CSKL","Configuration.setVirtualKeyboardLanguage returns failure. language code is not valid.");errorCallback(result);log("Configuration.setVirtualKeyboardLanguage invalid ");return}}
log("languageCodeList is valid");service.Request("luna://com.webos.service.commercial.signage.storageservice/configuration/",{method:"setVirtualKeyboardLanguage",parameters:{languageCodeList:options.languageCodeList},onSuccess:function(result){log("setVirtualKeyboardLanguage: On Success");if(result.returnValue===!0){if(typeof successCallback==='function'){successCallback()}}},onFailure:function(result){log("setVirtualKeyboardLanguage: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CSKL","Configuration.setVirtualKeyboardLanguage returns failure.");errorCallback(result)}}});log("Configuration.setVirtualKeyboardLanguage Done")};Configuration.prototype.getVirtualKeyboardLanguage=function(successCallback,errorCallback){log("getVirtualKeyboardLanguage: ");service.Request("luna://com.webos.service.commercial.signage.storageservice/configuration/",{method:"getVirtualKeyboardLanguage",parameters:{},onSuccess:function(result){log("getVirtualKeyboardLanguage: On Success");if(result.returnValue===!0){var cbObj={};log("keyboards : "+JSON.stringify(result.languageCodeList));cbObj.languageCodeList=result.languageCodeList;if(typeof successCallback==='function'){successCallback(cbObj)}}},onFailure:function(result){log("getVirtualKeyboardLanguage: On Failure");delete result.returnValue;if(typeof errorCallback==='function'){checkErrorCodeNText(result,"CGKL","Configuration.getVirtualKeyboardLanguage returns failure.");errorCallback(result)}}});log("Configuration.getVirtualKeyboardLanguage Done")};return Configuration}())